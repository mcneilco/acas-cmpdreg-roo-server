// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.cmpdreg.domain;

import com.labsynch.cmpdreg.domain.QcCompound;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect QcCompound_Roo_Finder {
    
    public static Long QcCompound.countFindQcCompoundsByCdId(int CdId) {
        EntityManager em = QcCompound.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM QcCompound AS o WHERE o.CdId = :CdId", Long.class);
        q.setParameter("CdId", CdId);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<QcCompound> QcCompound.findQcCompoundsByCdId(int CdId) {
        EntityManager em = QcCompound.entityManager();
        TypedQuery<QcCompound> q = em.createQuery("SELECT o FROM QcCompound AS o WHERE o.CdId = :CdId", QcCompound.class);
        q.setParameter("CdId", CdId);
        return q;
    }
    
    public static TypedQuery<QcCompound> QcCompound.findQcCompoundsByCdId(int CdId, String sortFieldName, String sortOrder) {
        EntityManager em = QcCompound.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM QcCompound AS o WHERE o.CdId = :CdId");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<QcCompound> q = em.createQuery(queryBuilder.toString(), QcCompound.class);
        q.setParameter("CdId", CdId);
        return q;
    }
    
}
